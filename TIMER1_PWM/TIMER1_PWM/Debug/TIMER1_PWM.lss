
TIMER1_PWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000460  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000004b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000004b4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004e4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  00000520  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008ea  00000000  00000000  000005b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000699  00000000  00000000  00000e9a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000455  00000000  00000000  00001533  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000cc  00000000  00000000  00001988  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000404  00000000  00000000  00001a54  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003d0  00000000  00000000  00001e58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00002228  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 2e 02 	jmp	0x45c	; 0x45c <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include <util/delay.h> // this header include all delay function like _delay_ms


int main(void)
{
	   TIMER1_PWM_FastFreq_Init(OC1A_PIN) ;
  6c:	81 e0       	ldi	r24, 0x01	; 1
  6e:	0e 94 ae 00 	call	0x15c	; 0x15c <TIMER1_PWM_FastFreq_Init>
	   
	   TIMER1_PWM_FastFreq_Duty_cycle(50,OC1A_PIN) ; // 1024*1/120000
  72:	61 e0       	ldi	r22, 0x01	; 1
  74:	82 e3       	ldi	r24, 0x32	; 50
  76:	0e 94 dd 00 	call	0x1ba	; 0x1ba <TIMER1_PWM_FastFreq_Duty_cycle>
  7a:	ff cf       	rjmp	.-2      	; 0x7a <main+0xe>

0000007c <DIO_vid_SetPintDirection>:
/* set pin direction */
extern void DIO_vid_SetPintDirection(u8 u8port,u8 u8pin,u8  u8dir) {



	if (u8dir==OUTPUT){
  7c:	4f 3f       	cpi	r20, 0xFF	; 255
  7e:	a1 f5       	brne	.+104    	; 0xe8 <DIO_vid_SetPintDirection+0x6c>


		switch (u8port){
  80:	81 30       	cpi	r24, 0x01	; 1
  82:	89 f0       	breq	.+34     	; 0xa6 <DIO_vid_SetPintDirection+0x2a>
  84:	28 f0       	brcs	.+10     	; 0x90 <DIO_vid_SetPintDirection+0x14>
  86:	82 30       	cpi	r24, 0x02	; 2
  88:	c9 f0       	breq	.+50     	; 0xbc <DIO_vid_SetPintDirection+0x40>
  8a:	83 30       	cpi	r24, 0x03	; 3
  8c:	11 f1       	breq	.+68     	; 0xd2 <DIO_vid_SetPintDirection+0x56>
  8e:	08 95       	ret

			case   DIO_u8PORTA: SET_BIT( DIO_u8DDRA_REG,u8pin) ; break ;
  90:	2a b3       	in	r18, 0x1a	; 26
  92:	81 e0       	ldi	r24, 0x01	; 1
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	02 c0       	rjmp	.+4      	; 0x9c <DIO_vid_SetPintDirection+0x20>
  98:	88 0f       	add	r24, r24
  9a:	99 1f       	adc	r25, r25
  9c:	6a 95       	dec	r22
  9e:	e2 f7       	brpl	.-8      	; 0x98 <DIO_vid_SetPintDirection+0x1c>
  a0:	82 2b       	or	r24, r18
  a2:	8a bb       	out	0x1a, r24	; 26
  a4:	08 95       	ret
			case   DIO_u8PORTB: SET_BIT( DIO_u8DDRB_REG,u8pin) ; break ;
  a6:	27 b3       	in	r18, 0x17	; 23
  a8:	81 e0       	ldi	r24, 0x01	; 1
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	02 c0       	rjmp	.+4      	; 0xb2 <DIO_vid_SetPintDirection+0x36>
  ae:	88 0f       	add	r24, r24
  b0:	99 1f       	adc	r25, r25
  b2:	6a 95       	dec	r22
  b4:	e2 f7       	brpl	.-8      	; 0xae <DIO_vid_SetPintDirection+0x32>
  b6:	82 2b       	or	r24, r18
  b8:	87 bb       	out	0x17, r24	; 23
  ba:	08 95       	ret
			case   DIO_u8PORTC: SET_BIT( DIO_u8DDRC_REG,u8pin) ; break ;
  bc:	24 b3       	in	r18, 0x14	; 20
  be:	81 e0       	ldi	r24, 0x01	; 1
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <DIO_vid_SetPintDirection+0x4c>
  c4:	88 0f       	add	r24, r24
  c6:	99 1f       	adc	r25, r25
  c8:	6a 95       	dec	r22
  ca:	e2 f7       	brpl	.-8      	; 0xc4 <DIO_vid_SetPintDirection+0x48>
  cc:	82 2b       	or	r24, r18
  ce:	84 bb       	out	0x14, r24	; 20
  d0:	08 95       	ret
			case   DIO_u8PORTD: SET_BIT( DIO_u8DDRD_REG,u8pin) ; break ;
  d2:	21 b3       	in	r18, 0x11	; 17
  d4:	81 e0       	ldi	r24, 0x01	; 1
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	02 c0       	rjmp	.+4      	; 0xde <DIO_vid_SetPintDirection+0x62>
  da:	88 0f       	add	r24, r24
  dc:	99 1f       	adc	r25, r25
  de:	6a 95       	dec	r22
  e0:	e2 f7       	brpl	.-8      	; 0xda <DIO_vid_SetPintDirection+0x5e>
  e2:	82 2b       	or	r24, r18
  e4:	81 bb       	out	0x11, r24	; 17
  e6:	08 95       	ret

			default : /* worng port */ break;
		}
	}
	else  if (u8dir == INPUT){
  e8:	41 11       	cpse	r20, r1
  ea:	37 c0       	rjmp	.+110    	; 0x15a <DIO_vid_SetPintDirection+0xde>

		switch (u8port){
  ec:	81 30       	cpi	r24, 0x01	; 1
  ee:	91 f0       	breq	.+36     	; 0x114 <DIO_vid_SetPintDirection+0x98>
  f0:	28 f0       	brcs	.+10     	; 0xfc <DIO_vid_SetPintDirection+0x80>
  f2:	82 30       	cpi	r24, 0x02	; 2
  f4:	d9 f0       	breq	.+54     	; 0x12c <DIO_vid_SetPintDirection+0xb0>
  f6:	83 30       	cpi	r24, 0x03	; 3
  f8:	29 f1       	breq	.+74     	; 0x144 <DIO_vid_SetPintDirection+0xc8>
  fa:	08 95       	ret
			case   DIO_u8PORTA: CLR_BIT( DIO_u8DDRA_REG,u8pin) ; break ;
  fc:	2a b3       	in	r18, 0x1a	; 26
  fe:	81 e0       	ldi	r24, 0x01	; 1
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	02 c0       	rjmp	.+4      	; 0x108 <DIO_vid_SetPintDirection+0x8c>
 104:	88 0f       	add	r24, r24
 106:	99 1f       	adc	r25, r25
 108:	6a 95       	dec	r22
 10a:	e2 f7       	brpl	.-8      	; 0x104 <DIO_vid_SetPintDirection+0x88>
 10c:	80 95       	com	r24
 10e:	82 23       	and	r24, r18
 110:	8a bb       	out	0x1a, r24	; 26
 112:	08 95       	ret
			case   DIO_u8PORTB: CLR_BIT( DIO_u8DDRB_REG,u8pin) ; break ;
 114:	27 b3       	in	r18, 0x17	; 23
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	02 c0       	rjmp	.+4      	; 0x120 <DIO_vid_SetPintDirection+0xa4>
 11c:	88 0f       	add	r24, r24
 11e:	99 1f       	adc	r25, r25
 120:	6a 95       	dec	r22
 122:	e2 f7       	brpl	.-8      	; 0x11c <DIO_vid_SetPintDirection+0xa0>
 124:	80 95       	com	r24
 126:	82 23       	and	r24, r18
 128:	87 bb       	out	0x17, r24	; 23
 12a:	08 95       	ret
			case   DIO_u8PORTC: CLR_BIT( DIO_u8DDRC_REG,u8pin) ; break ;
 12c:	24 b3       	in	r18, 0x14	; 20
 12e:	81 e0       	ldi	r24, 0x01	; 1
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	02 c0       	rjmp	.+4      	; 0x138 <DIO_vid_SetPintDirection+0xbc>
 134:	88 0f       	add	r24, r24
 136:	99 1f       	adc	r25, r25
 138:	6a 95       	dec	r22
 13a:	e2 f7       	brpl	.-8      	; 0x134 <DIO_vid_SetPintDirection+0xb8>
 13c:	80 95       	com	r24
 13e:	82 23       	and	r24, r18
 140:	84 bb       	out	0x14, r24	; 20
 142:	08 95       	ret
			case   DIO_u8PORTD: CLR_BIT( DIO_u8DDRD_REG,u8pin) ; break ;
 144:	21 b3       	in	r18, 0x11	; 17
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	02 c0       	rjmp	.+4      	; 0x150 <DIO_vid_SetPintDirection+0xd4>
 14c:	88 0f       	add	r24, r24
 14e:	99 1f       	adc	r25, r25
 150:	6a 95       	dec	r22
 152:	e2 f7       	brpl	.-8      	; 0x14c <DIO_vid_SetPintDirection+0xd0>
 154:	80 95       	com	r24
 156:	82 23       	and	r24, r18
 158:	81 bb       	out	0x11, r24	; 17
 15a:	08 95       	ret

0000015c <TIMER1_PWM_FastFreq_Init>:
function description: init PWM fast  ferequancy  mode / non inverting / No prescaling
*/

void TIMER1_PWM_FastFreq_Init(u8 pin) {
	
     switch(pin){
 15c:	81 30       	cpi	r24, 0x01	; 1
 15e:	19 f0       	breq	.+6      	; 0x166 <TIMER1_PWM_FastFreq_Init+0xa>
 160:	82 30       	cpi	r24, 0x02	; 2
 162:	b1 f0       	breq	.+44     	; 0x190 <TIMER1_PWM_FastFreq_Init+0x34>
 164:	08 95       	ret
	 case 1: 
	            DIO_vid_SetPintDirection(DIO_u8PORTD,DIO_u8PIN5,OUTPUT) ; // Make bit 5(OC1A) in POTRD-->OUTPUT 
 166:	4f ef       	ldi	r20, 0xFF	; 255
 168:	65 e0       	ldi	r22, 0x05	; 5
 16a:	83 e0       	ldi	r24, 0x03	; 3
 16c:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_vid_SetPintDirection>
	            SET_BIT(TCCR1A_REG,7) ; // non inverting mode --> OC1A
 170:	8f b5       	in	r24, 0x2f	; 47
 172:	80 68       	ori	r24, 0x80	; 128
 174:	8f bd       	out	0x2f, r24	; 47
				/* Fast PWM  10 bit */
				SET_BIT(TCCR1A_REG,0) ;
 176:	8f b5       	in	r24, 0x2f	; 47
 178:	81 60       	ori	r24, 0x01	; 1
 17a:	8f bd       	out	0x2f, r24	; 47
				SET_BIT(TCCR1A_REG,1) ;
 17c:	8f b5       	in	r24, 0x2f	; 47
 17e:	82 60       	ori	r24, 0x02	; 2
 180:	8f bd       	out	0x2f, r24	; 47
				SET_BIT(TCCR1B_REG,3) ;
 182:	8e b5       	in	r24, 0x2e	; 46
 184:	88 60       	ori	r24, 0x08	; 8
 186:	8e bd       	out	0x2e, r24	; 46
				SET_BIT(TCCR1B_REG,0) ;// NOprescaller
 188:	8e b5       	in	r24, 0x2e	; 46
 18a:	81 60       	ori	r24, 0x01	; 1
 18c:	8e bd       	out	0x2e, r24	; 46
				break;
 18e:	08 95       	ret
				
	 
	 case 2:
	             DIO_vid_SetPintDirection(DIO_u8PORTD,DIO_u8PIN4,OUTPUT) ; // Make bit4 (OC1B) in POTRD-->OUTPUT 
 190:	4f ef       	ldi	r20, 0xFF	; 255
 192:	64 e0       	ldi	r22, 0x04	; 4
 194:	83 e0       	ldi	r24, 0x03	; 3
 196:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_vid_SetPintDirection>
	            SET_BIT(TCCR1A_REG,6) ;  // non inverting mode --> OC1B
 19a:	8f b5       	in	r24, 0x2f	; 47
 19c:	80 64       	ori	r24, 0x40	; 64
 19e:	8f bd       	out	0x2f, r24	; 47
				/* Fast PWM  10 bit */
				SET_BIT(TCCR1A_REG,1) ;
 1a0:	8f b5       	in	r24, 0x2f	; 47
 1a2:	82 60       	ori	r24, 0x02	; 2
 1a4:	8f bd       	out	0x2f, r24	; 47
				SET_BIT(TCCR1A_REG,0) ;
 1a6:	8f b5       	in	r24, 0x2f	; 47
 1a8:	81 60       	ori	r24, 0x01	; 1
 1aa:	8f bd       	out	0x2f, r24	; 47
				SET_BIT(TCCR1B_REG,3) ;
 1ac:	8e b5       	in	r24, 0x2e	; 46
 1ae:	88 60       	ori	r24, 0x08	; 8
 1b0:	8e bd       	out	0x2e, r24	; 46
				SET_BIT(TCCR1B_REG,0) ;// NOprescaller
 1b2:	8e b5       	in	r24, 0x2e	; 46
 1b4:	81 60       	ori	r24, 0x01	; 1
 1b6:	8e bd       	out	0x2e, r24	; 46
 1b8:	08 95       	ret

000001ba <TIMER1_PWM_FastFreq_Duty_cycle>:
 */
void TIMER1_PWM_FastFreq_Duty_cycle(u8 duty , u8 pin ) {
	
 
 
	          switch(pin){
 1ba:	61 30       	cpi	r22, 0x01	; 1
 1bc:	19 f0       	breq	.+6      	; 0x1c4 <TIMER1_PWM_FastFreq_Duty_cycle+0xa>
 1be:	62 30       	cpi	r22, 0x02	; 2
 1c0:	91 f0       	breq	.+36     	; 0x1e6 <TIMER1_PWM_FastFreq_Duty_cycle+0x2c>
 1c2:	08 95       	ret
				  
				  case 1: 
				         OCR1A_REG= duty*10.23 ; break;
 1c4:	68 2f       	mov	r22, r24
 1c6:	70 e0       	ldi	r23, 0x00	; 0
 1c8:	80 e0       	ldi	r24, 0x00	; 0
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	0e 94 35 01 	call	0x26a	; 0x26a <__floatsisf>
 1d0:	24 e1       	ldi	r18, 0x14	; 20
 1d2:	3e ea       	ldi	r19, 0xAE	; 174
 1d4:	43 e2       	ldi	r20, 0x23	; 35
 1d6:	51 e4       	ldi	r21, 0x41	; 65
 1d8:	0e 94 99 01 	call	0x332	; 0x332 <__mulsf3>
 1dc:	0e 94 04 01 	call	0x208	; 0x208 <__fixunssfsi>
 1e0:	7b bd       	out	0x2b, r23	; 43
 1e2:	6a bd       	out	0x2a, r22	; 42
 1e4:	08 95       	ret
				  case 2:
				         OCR1B_REG=duty*10.23; break;
 1e6:	68 2f       	mov	r22, r24
 1e8:	70 e0       	ldi	r23, 0x00	; 0
 1ea:	80 e0       	ldi	r24, 0x00	; 0
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	0e 94 35 01 	call	0x26a	; 0x26a <__floatsisf>
 1f2:	24 e1       	ldi	r18, 0x14	; 20
 1f4:	3e ea       	ldi	r19, 0xAE	; 174
 1f6:	43 e2       	ldi	r20, 0x23	; 35
 1f8:	51 e4       	ldi	r21, 0x41	; 65
 1fa:	0e 94 99 01 	call	0x332	; 0x332 <__mulsf3>
 1fe:	0e 94 04 01 	call	0x208	; 0x208 <__fixunssfsi>
 202:	79 bd       	out	0x29, r23	; 41
 204:	68 bd       	out	0x28, r22	; 40
 206:	08 95       	ret

00000208 <__fixunssfsi>:
 208:	0e 94 78 01 	call	0x2f0	; 0x2f0 <__fp_splitA>
 20c:	88 f0       	brcs	.+34     	; 0x230 <__fixunssfsi+0x28>
 20e:	9f 57       	subi	r25, 0x7F	; 127
 210:	98 f0       	brcs	.+38     	; 0x238 <__fixunssfsi+0x30>
 212:	b9 2f       	mov	r27, r25
 214:	99 27       	eor	r25, r25
 216:	b7 51       	subi	r27, 0x17	; 23
 218:	b0 f0       	brcs	.+44     	; 0x246 <__fixunssfsi+0x3e>
 21a:	e1 f0       	breq	.+56     	; 0x254 <__fixunssfsi+0x4c>
 21c:	66 0f       	add	r22, r22
 21e:	77 1f       	adc	r23, r23
 220:	88 1f       	adc	r24, r24
 222:	99 1f       	adc	r25, r25
 224:	1a f0       	brmi	.+6      	; 0x22c <__fixunssfsi+0x24>
 226:	ba 95       	dec	r27
 228:	c9 f7       	brne	.-14     	; 0x21c <__fixunssfsi+0x14>
 22a:	14 c0       	rjmp	.+40     	; 0x254 <__fixunssfsi+0x4c>
 22c:	b1 30       	cpi	r27, 0x01	; 1
 22e:	91 f0       	breq	.+36     	; 0x254 <__fixunssfsi+0x4c>
 230:	0e 94 92 01 	call	0x324	; 0x324 <__fp_zero>
 234:	b1 e0       	ldi	r27, 0x01	; 1
 236:	08 95       	ret
 238:	0c 94 92 01 	jmp	0x324	; 0x324 <__fp_zero>
 23c:	67 2f       	mov	r22, r23
 23e:	78 2f       	mov	r23, r24
 240:	88 27       	eor	r24, r24
 242:	b8 5f       	subi	r27, 0xF8	; 248
 244:	39 f0       	breq	.+14     	; 0x254 <__fixunssfsi+0x4c>
 246:	b9 3f       	cpi	r27, 0xF9	; 249
 248:	cc f3       	brlt	.-14     	; 0x23c <__fixunssfsi+0x34>
 24a:	86 95       	lsr	r24
 24c:	77 95       	ror	r23
 24e:	67 95       	ror	r22
 250:	b3 95       	inc	r27
 252:	d9 f7       	brne	.-10     	; 0x24a <__fixunssfsi+0x42>
 254:	3e f4       	brtc	.+14     	; 0x264 <__fixunssfsi+0x5c>
 256:	90 95       	com	r25
 258:	80 95       	com	r24
 25a:	70 95       	com	r23
 25c:	61 95       	neg	r22
 25e:	7f 4f       	sbci	r23, 0xFF	; 255
 260:	8f 4f       	sbci	r24, 0xFF	; 255
 262:	9f 4f       	sbci	r25, 0xFF	; 255
 264:	08 95       	ret

00000266 <__floatunsisf>:
 266:	e8 94       	clt
 268:	09 c0       	rjmp	.+18     	; 0x27c <__floatsisf+0x12>

0000026a <__floatsisf>:
 26a:	97 fb       	bst	r25, 7
 26c:	3e f4       	brtc	.+14     	; 0x27c <__floatsisf+0x12>
 26e:	90 95       	com	r25
 270:	80 95       	com	r24
 272:	70 95       	com	r23
 274:	61 95       	neg	r22
 276:	7f 4f       	sbci	r23, 0xFF	; 255
 278:	8f 4f       	sbci	r24, 0xFF	; 255
 27a:	9f 4f       	sbci	r25, 0xFF	; 255
 27c:	99 23       	and	r25, r25
 27e:	a9 f0       	breq	.+42     	; 0x2aa <__floatsisf+0x40>
 280:	f9 2f       	mov	r31, r25
 282:	96 e9       	ldi	r25, 0x96	; 150
 284:	bb 27       	eor	r27, r27
 286:	93 95       	inc	r25
 288:	f6 95       	lsr	r31
 28a:	87 95       	ror	r24
 28c:	77 95       	ror	r23
 28e:	67 95       	ror	r22
 290:	b7 95       	ror	r27
 292:	f1 11       	cpse	r31, r1
 294:	f8 cf       	rjmp	.-16     	; 0x286 <__floatsisf+0x1c>
 296:	fa f4       	brpl	.+62     	; 0x2d6 <__floatsisf+0x6c>
 298:	bb 0f       	add	r27, r27
 29a:	11 f4       	brne	.+4      	; 0x2a0 <__floatsisf+0x36>
 29c:	60 ff       	sbrs	r22, 0
 29e:	1b c0       	rjmp	.+54     	; 0x2d6 <__floatsisf+0x6c>
 2a0:	6f 5f       	subi	r22, 0xFF	; 255
 2a2:	7f 4f       	sbci	r23, 0xFF	; 255
 2a4:	8f 4f       	sbci	r24, 0xFF	; 255
 2a6:	9f 4f       	sbci	r25, 0xFF	; 255
 2a8:	16 c0       	rjmp	.+44     	; 0x2d6 <__floatsisf+0x6c>
 2aa:	88 23       	and	r24, r24
 2ac:	11 f0       	breq	.+4      	; 0x2b2 <__floatsisf+0x48>
 2ae:	96 e9       	ldi	r25, 0x96	; 150
 2b0:	11 c0       	rjmp	.+34     	; 0x2d4 <__floatsisf+0x6a>
 2b2:	77 23       	and	r23, r23
 2b4:	21 f0       	breq	.+8      	; 0x2be <__floatsisf+0x54>
 2b6:	9e e8       	ldi	r25, 0x8E	; 142
 2b8:	87 2f       	mov	r24, r23
 2ba:	76 2f       	mov	r23, r22
 2bc:	05 c0       	rjmp	.+10     	; 0x2c8 <__floatsisf+0x5e>
 2be:	66 23       	and	r22, r22
 2c0:	71 f0       	breq	.+28     	; 0x2de <__floatsisf+0x74>
 2c2:	96 e8       	ldi	r25, 0x86	; 134
 2c4:	86 2f       	mov	r24, r22
 2c6:	70 e0       	ldi	r23, 0x00	; 0
 2c8:	60 e0       	ldi	r22, 0x00	; 0
 2ca:	2a f0       	brmi	.+10     	; 0x2d6 <__floatsisf+0x6c>
 2cc:	9a 95       	dec	r25
 2ce:	66 0f       	add	r22, r22
 2d0:	77 1f       	adc	r23, r23
 2d2:	88 1f       	adc	r24, r24
 2d4:	da f7       	brpl	.-10     	; 0x2cc <__floatsisf+0x62>
 2d6:	88 0f       	add	r24, r24
 2d8:	96 95       	lsr	r25
 2da:	87 95       	ror	r24
 2dc:	97 f9       	bld	r25, 7
 2de:	08 95       	ret

000002e0 <__fp_split3>:
 2e0:	57 fd       	sbrc	r21, 7
 2e2:	90 58       	subi	r25, 0x80	; 128
 2e4:	44 0f       	add	r20, r20
 2e6:	55 1f       	adc	r21, r21
 2e8:	59 f0       	breq	.+22     	; 0x300 <__fp_splitA+0x10>
 2ea:	5f 3f       	cpi	r21, 0xFF	; 255
 2ec:	71 f0       	breq	.+28     	; 0x30a <__fp_splitA+0x1a>
 2ee:	47 95       	ror	r20

000002f0 <__fp_splitA>:
 2f0:	88 0f       	add	r24, r24
 2f2:	97 fb       	bst	r25, 7
 2f4:	99 1f       	adc	r25, r25
 2f6:	61 f0       	breq	.+24     	; 0x310 <__fp_splitA+0x20>
 2f8:	9f 3f       	cpi	r25, 0xFF	; 255
 2fa:	79 f0       	breq	.+30     	; 0x31a <__fp_splitA+0x2a>
 2fc:	87 95       	ror	r24
 2fe:	08 95       	ret
 300:	12 16       	cp	r1, r18
 302:	13 06       	cpc	r1, r19
 304:	14 06       	cpc	r1, r20
 306:	55 1f       	adc	r21, r21
 308:	f2 cf       	rjmp	.-28     	; 0x2ee <__fp_split3+0xe>
 30a:	46 95       	lsr	r20
 30c:	f1 df       	rcall	.-30     	; 0x2f0 <__fp_splitA>
 30e:	08 c0       	rjmp	.+16     	; 0x320 <__fp_splitA+0x30>
 310:	16 16       	cp	r1, r22
 312:	17 06       	cpc	r1, r23
 314:	18 06       	cpc	r1, r24
 316:	99 1f       	adc	r25, r25
 318:	f1 cf       	rjmp	.-30     	; 0x2fc <__fp_splitA+0xc>
 31a:	86 95       	lsr	r24
 31c:	71 05       	cpc	r23, r1
 31e:	61 05       	cpc	r22, r1
 320:	08 94       	sec
 322:	08 95       	ret

00000324 <__fp_zero>:
 324:	e8 94       	clt

00000326 <__fp_szero>:
 326:	bb 27       	eor	r27, r27
 328:	66 27       	eor	r22, r22
 32a:	77 27       	eor	r23, r23
 32c:	cb 01       	movw	r24, r22
 32e:	97 f9       	bld	r25, 7
 330:	08 95       	ret

00000332 <__mulsf3>:
 332:	0e 94 ac 01 	call	0x358	; 0x358 <__mulsf3x>
 336:	0c 94 1d 02 	jmp	0x43a	; 0x43a <__fp_round>
 33a:	0e 94 0f 02 	call	0x41e	; 0x41e <__fp_pscA>
 33e:	38 f0       	brcs	.+14     	; 0x34e <__mulsf3+0x1c>
 340:	0e 94 16 02 	call	0x42c	; 0x42c <__fp_pscB>
 344:	20 f0       	brcs	.+8      	; 0x34e <__mulsf3+0x1c>
 346:	95 23       	and	r25, r21
 348:	11 f0       	breq	.+4      	; 0x34e <__mulsf3+0x1c>
 34a:	0c 94 06 02 	jmp	0x40c	; 0x40c <__fp_inf>
 34e:	0c 94 0c 02 	jmp	0x418	; 0x418 <__fp_nan>
 352:	11 24       	eor	r1, r1
 354:	0c 94 93 01 	jmp	0x326	; 0x326 <__fp_szero>

00000358 <__mulsf3x>:
 358:	0e 94 70 01 	call	0x2e0	; 0x2e0 <__fp_split3>
 35c:	70 f3       	brcs	.-36     	; 0x33a <__mulsf3+0x8>

0000035e <__mulsf3_pse>:
 35e:	95 9f       	mul	r25, r21
 360:	c1 f3       	breq	.-16     	; 0x352 <__mulsf3+0x20>
 362:	95 0f       	add	r25, r21
 364:	50 e0       	ldi	r21, 0x00	; 0
 366:	55 1f       	adc	r21, r21
 368:	62 9f       	mul	r22, r18
 36a:	f0 01       	movw	r30, r0
 36c:	72 9f       	mul	r23, r18
 36e:	bb 27       	eor	r27, r27
 370:	f0 0d       	add	r31, r0
 372:	b1 1d       	adc	r27, r1
 374:	63 9f       	mul	r22, r19
 376:	aa 27       	eor	r26, r26
 378:	f0 0d       	add	r31, r0
 37a:	b1 1d       	adc	r27, r1
 37c:	aa 1f       	adc	r26, r26
 37e:	64 9f       	mul	r22, r20
 380:	66 27       	eor	r22, r22
 382:	b0 0d       	add	r27, r0
 384:	a1 1d       	adc	r26, r1
 386:	66 1f       	adc	r22, r22
 388:	82 9f       	mul	r24, r18
 38a:	22 27       	eor	r18, r18
 38c:	b0 0d       	add	r27, r0
 38e:	a1 1d       	adc	r26, r1
 390:	62 1f       	adc	r22, r18
 392:	73 9f       	mul	r23, r19
 394:	b0 0d       	add	r27, r0
 396:	a1 1d       	adc	r26, r1
 398:	62 1f       	adc	r22, r18
 39a:	83 9f       	mul	r24, r19
 39c:	a0 0d       	add	r26, r0
 39e:	61 1d       	adc	r22, r1
 3a0:	22 1f       	adc	r18, r18
 3a2:	74 9f       	mul	r23, r20
 3a4:	33 27       	eor	r19, r19
 3a6:	a0 0d       	add	r26, r0
 3a8:	61 1d       	adc	r22, r1
 3aa:	23 1f       	adc	r18, r19
 3ac:	84 9f       	mul	r24, r20
 3ae:	60 0d       	add	r22, r0
 3b0:	21 1d       	adc	r18, r1
 3b2:	82 2f       	mov	r24, r18
 3b4:	76 2f       	mov	r23, r22
 3b6:	6a 2f       	mov	r22, r26
 3b8:	11 24       	eor	r1, r1
 3ba:	9f 57       	subi	r25, 0x7F	; 127
 3bc:	50 40       	sbci	r21, 0x00	; 0
 3be:	9a f0       	brmi	.+38     	; 0x3e6 <__mulsf3_pse+0x88>
 3c0:	f1 f0       	breq	.+60     	; 0x3fe <__mulsf3_pse+0xa0>
 3c2:	88 23       	and	r24, r24
 3c4:	4a f0       	brmi	.+18     	; 0x3d8 <__mulsf3_pse+0x7a>
 3c6:	ee 0f       	add	r30, r30
 3c8:	ff 1f       	adc	r31, r31
 3ca:	bb 1f       	adc	r27, r27
 3cc:	66 1f       	adc	r22, r22
 3ce:	77 1f       	adc	r23, r23
 3d0:	88 1f       	adc	r24, r24
 3d2:	91 50       	subi	r25, 0x01	; 1
 3d4:	50 40       	sbci	r21, 0x00	; 0
 3d6:	a9 f7       	brne	.-22     	; 0x3c2 <__mulsf3_pse+0x64>
 3d8:	9e 3f       	cpi	r25, 0xFE	; 254
 3da:	51 05       	cpc	r21, r1
 3dc:	80 f0       	brcs	.+32     	; 0x3fe <__mulsf3_pse+0xa0>
 3de:	0c 94 06 02 	jmp	0x40c	; 0x40c <__fp_inf>
 3e2:	0c 94 93 01 	jmp	0x326	; 0x326 <__fp_szero>
 3e6:	5f 3f       	cpi	r21, 0xFF	; 255
 3e8:	e4 f3       	brlt	.-8      	; 0x3e2 <__mulsf3_pse+0x84>
 3ea:	98 3e       	cpi	r25, 0xE8	; 232
 3ec:	d4 f3       	brlt	.-12     	; 0x3e2 <__mulsf3_pse+0x84>
 3ee:	86 95       	lsr	r24
 3f0:	77 95       	ror	r23
 3f2:	67 95       	ror	r22
 3f4:	b7 95       	ror	r27
 3f6:	f7 95       	ror	r31
 3f8:	e7 95       	ror	r30
 3fa:	9f 5f       	subi	r25, 0xFF	; 255
 3fc:	c1 f7       	brne	.-16     	; 0x3ee <__mulsf3_pse+0x90>
 3fe:	fe 2b       	or	r31, r30
 400:	88 0f       	add	r24, r24
 402:	91 1d       	adc	r25, r1
 404:	96 95       	lsr	r25
 406:	87 95       	ror	r24
 408:	97 f9       	bld	r25, 7
 40a:	08 95       	ret

0000040c <__fp_inf>:
 40c:	97 f9       	bld	r25, 7
 40e:	9f 67       	ori	r25, 0x7F	; 127
 410:	80 e8       	ldi	r24, 0x80	; 128
 412:	70 e0       	ldi	r23, 0x00	; 0
 414:	60 e0       	ldi	r22, 0x00	; 0
 416:	08 95       	ret

00000418 <__fp_nan>:
 418:	9f ef       	ldi	r25, 0xFF	; 255
 41a:	80 ec       	ldi	r24, 0xC0	; 192
 41c:	08 95       	ret

0000041e <__fp_pscA>:
 41e:	00 24       	eor	r0, r0
 420:	0a 94       	dec	r0
 422:	16 16       	cp	r1, r22
 424:	17 06       	cpc	r1, r23
 426:	18 06       	cpc	r1, r24
 428:	09 06       	cpc	r0, r25
 42a:	08 95       	ret

0000042c <__fp_pscB>:
 42c:	00 24       	eor	r0, r0
 42e:	0a 94       	dec	r0
 430:	12 16       	cp	r1, r18
 432:	13 06       	cpc	r1, r19
 434:	14 06       	cpc	r1, r20
 436:	05 06       	cpc	r0, r21
 438:	08 95       	ret

0000043a <__fp_round>:
 43a:	09 2e       	mov	r0, r25
 43c:	03 94       	inc	r0
 43e:	00 0c       	add	r0, r0
 440:	11 f4       	brne	.+4      	; 0x446 <__fp_round+0xc>
 442:	88 23       	and	r24, r24
 444:	52 f0       	brmi	.+20     	; 0x45a <__fp_round+0x20>
 446:	bb 0f       	add	r27, r27
 448:	40 f4       	brcc	.+16     	; 0x45a <__fp_round+0x20>
 44a:	bf 2b       	or	r27, r31
 44c:	11 f4       	brne	.+4      	; 0x452 <__fp_round+0x18>
 44e:	60 ff       	sbrs	r22, 0
 450:	04 c0       	rjmp	.+8      	; 0x45a <__fp_round+0x20>
 452:	6f 5f       	subi	r22, 0xFF	; 255
 454:	7f 4f       	sbci	r23, 0xFF	; 255
 456:	8f 4f       	sbci	r24, 0xFF	; 255
 458:	9f 4f       	sbci	r25, 0xFF	; 255
 45a:	08 95       	ret

0000045c <_exit>:
 45c:	f8 94       	cli

0000045e <__stop_program>:
 45e:	ff cf       	rjmp	.-2      	; 0x45e <__stop_program>
